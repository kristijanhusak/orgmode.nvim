local Date = require('orgmode.objects.date')
describe('Date object', function()
  it('shoud parse date', function()
    local date = '2021-06-10'
    local result = Date.from_string(date)
    assert.are.same(date, result.original_value)
    assert.are.same(2021, result.year)
    assert.are.same(6, result.month)
    assert.are.same(10, result.day)
    assert.are.same(0, result.hour)
    assert.are.same(0, result.min)
    assert.is.Nil(result.dayname)
    assert.are.same(true, result.date_only)
    assert.are.same(1623276000, result.timestamp)
    assert.are.same(date, result:to_string())
    assert.are.same({}, result.adjustments)

    local date_with_dayname = '2021-06-10 Thu'
    local result_with_dayname = Date.from_string(date_with_dayname)
    assert.are.same(date_with_dayname, result_with_dayname.original_value)
    assert.are.same(2021, result_with_dayname.year)
    assert.are.same(6, result_with_dayname.month)
    assert.are.same(10, result_with_dayname.day)
    assert.are.same(0, result_with_dayname.hour)
    assert.are.same(0, result_with_dayname.min)
    assert.are.same('Thu', result_with_dayname.dayname)
    assert.are.same(true, result_with_dayname.date_only)
    assert.are.same(1623276000, result_with_dayname.timestamp)
    assert.are.same(date_with_dayname, result_with_dayname:to_string())
    assert.are.same({}, result_with_dayname.adjustments)
  end)

  it('should parse date time', function()
    local date = '2021-07-05 09:00'
    local result = Date.from_string(date)
    assert.are.same(date, result.original_value)
    assert.are.same(2021, result.year)
    assert.are.same(7, result.month)
    assert.are.same(5, result.day)
    assert.are.same(9, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1625468400, result.timestamp)
    assert.are.same(date, result:to_string())
    assert.are.same({}, result.adjustments)

    local date_with_dayname = '2021-07-05 Mon 09:00'
    local result_with_dayname = Date.from_string(date_with_dayname)
    assert.are.same(date_with_dayname, result_with_dayname.original_value)
    assert.are.same(2021, result_with_dayname.year)
    assert.are.same(7, result_with_dayname.month)
    assert.are.same(5, result_with_dayname.day)
    assert.are.same(9, result_with_dayname.hour)
    assert.are.same(0, result_with_dayname.min)
    assert.are.same(false, result_with_dayname.date_only)
    assert.are.same(1625468400, result_with_dayname.timestamp)
    assert.are.same(date_with_dayname, result_with_dayname:to_string())
    assert.are.same({}, result_with_dayname.adjustments)
  end)

  it('should parse date time with dayname and warning adjustment', function()
    local date = '2021-06-30 Wed 09:00 -1d'
    local result = Date.from_string(date)
    assert.are.same(date, result.original_value)
    assert.are.same(2021, result.year)
    assert.are.same(6, result.month)
    assert.are.same(30, result.day)
    assert.are.same(1625036400, result.timestamp)
    assert.are.same(9, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(date, result:to_string())
    assert.are.same({'-1d'}, result.adjustments)
  end)

  it('should parse date time with dayname repeat adjustment', function()
    local date = '2021-06-30 Wed 09:00 +1m'
    local result = Date.from_string(date)
    assert.are.same(date, result.original_value)
    assert.are.same(2021, result.year)
    assert.are.same(6, result.month)
    assert.are.same(30, result.day)
    assert.are.same(9, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1625036400, result.timestamp)
    assert.are.same(date, result:to_string())
    assert.are.same({'+1m'}, result.adjustments)
  end)

  it('should parse date time with dayname and both repeat and warning adjustment', function()
    local date = '2021-06-30 Wed 09:00 +1m -1d'
    local result = Date.from_string(date)
    assert.are.same(date, result.original_value)
    assert.are.same(2021, result.year)
    assert.are.same(6, result.month)
    assert.are.same(30, result.day)
    assert.are.same(9, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1625036400, result.timestamp)
    assert.are.same(date, result:to_string())
    assert.are.same({'+1m', '-1d'}, result.adjustments)
  end)

  it('should parse date time with dayname and catch-up adjustment', function()
    local date = '2021-06-30 Wed 09:00 ++5d'
    local result = Date.from_string(date)
    assert.are.same(date, result.original_value)
    assert.are.same(2021, result.year)
    assert.are.same(6, result.month)
    assert.are.same(30, result.day)
    assert.are.same(9, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1625036400, result.timestamp)
    assert.are.same(date, result:to_string())
    assert.are.same({'++5d'}, result.adjustments)
  end)

  it('should parse date time with dayname and restart adjustment', function()
    local date = '2021-06-30 Wed 09:00 .+1m'
    local result = Date.from_string(date)
    assert.are.same(date, result.original_value)
    assert.are.same(2021, result.year)
    assert.are.same(6, result.month)
    assert.are.same(30, result.day)
    assert.are.same(9, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1625036400, result.timestamp)
    assert.are.same(date, result:to_string())
    assert.are.same({'.+1m'}, result.adjustments)
  end)

  it('should adjust date', function()
    local date = '2021-06-10'
    local result = Date.from_string(date)
    assert.are.same(date, result.original_value)
    assert.are.same(2021, result.year)
    assert.are.same(6, result.month)
    assert.are.same(10, result.day)
    assert.are.same(0, result.hour)
    assert.are.same(0, result.min)
    assert.is.Nil(result.dayname)
    assert.are.same(true, result.date_only)
    assert.are.same(1623276000, result.timestamp)
    assert.are.same(date, result:to_string())
    assert.are.same({}, result.adjustments)

    result = result:adjust('+1d')
    assert.are.same(2021, result.year)
    assert.are.same(6, result.month)
    assert.are.same(11, result.day)
    assert.are.same(0, result.hour)
    assert.are.same(0, result.min)
    assert.is.Nil(result.dayname)
    assert.are.same(true, result.date_only)
    assert.are.same(1623362400, result.timestamp)
    assert.are.same('2021-06-11', result:to_string())
    assert.are.same({}, result.adjustments)

    result = result:adjust('+3m')
    assert.are.same(2021, result.year)
    assert.are.same(9, result.month)
    assert.are.same(11, result.day)
    assert.are.same(0, result.hour)
    assert.are.same(0, result.min)
    assert.is.Nil(result.dayname)
    assert.are.same(true, result.date_only)
    assert.are.same(1631311200, result.timestamp)
    assert.are.same('2021-09-11', result:to_string())
    assert.are.same({}, result.adjustments)

    result = result:adjust('-1w')
    assert.are.same(2021, result.year)
    assert.are.same(9, result.month)
    assert.are.same(4, result.day)
    assert.are.same(0, result.hour)
    assert.are.same(0, result.min)
    assert.is.Nil(result.dayname)
    assert.are.same(true, result.date_only)
    assert.are.same(1630706400, result.timestamp)
    assert.are.same('2021-09-04', result:to_string())
    assert.are.same({}, result.adjustments)

    result = result:adjust('+2y')
    assert.are.same(2023, result.year)
    assert.are.same(9, result.month)
    assert.are.same(4, result.day)
    assert.are.same(0, result.hour)
    assert.are.same(0, result.min)
    assert.is.Nil(result.dayname)
    assert.are.same(true, result.date_only)
    assert.are.same(1693778400, result.timestamp)
    assert.are.same('2023-09-04', result:to_string())
    assert.are.same({}, result.adjustments)

    result = result:adjust('+2')
    assert.are.same(2023, result.year)
    assert.are.same(9, result.month)
    assert.are.same(6, result.day)
    assert.are.same(0, result.hour)
    assert.are.same(0, result.min)
    assert.is.Nil(result.dayname)
    assert.are.same(true, result.date_only)
    assert.are.same(1693951200, result.timestamp)
    assert.are.same('2023-09-06', result:to_string())
    assert.are.same({}, result.adjustments)
  end)

  it('should adjust date time', function()
    local date = '2021-06-30 Wed 09:00 +1m'
    local result = Date.from_string(date)
    assert.are.same(date, result.original_value)
    assert.are.same(2021, result.year)
    assert.are.same(6, result.month)
    assert.are.same(30, result.day)
    assert.are.same(9, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1625036400, result.timestamp)
    assert.are.same(date, result:to_string())
    assert.are.same({'+1m'}, result.adjustments)

    result = result:adjust('+1d')
    assert.are.same(2021, result.year)
    assert.are.same(7, result.month)
    assert.are.same(1, result.day)
    assert.are.same(9, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1625122800, result.timestamp)
    assert.are.same("2021-07-01 Thu 09:00 +1m", result:to_string())
    assert.are.same({'+1m'}, result.adjustments)

    result = result:adjust('+2w')
    assert.are.same(2021, result.year)
    assert.are.same(7, result.month)
    assert.are.same(15, result.day)
    assert.are.same(9, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1626332400, result.timestamp)
    assert.are.same("2021-07-15 Thu 09:00 +1m", result:to_string())
    assert.are.same({'+1m'}, result.adjustments)

    result = result:adjust('-3h')
    assert.are.same(2021, result.year)
    assert.are.same(7, result.month)
    assert.are.same(15, result.day)
    assert.are.same(6, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1626321600, result.timestamp)
    assert.are.same("2021-07-15 Thu 06:00 +1m", result:to_string())
    assert.are.same({'+1m'}, result.adjustments)

    result = result:adjust('+3y')
    assert.are.same(2024, result.year)
    assert.are.same(7, result.month)
    assert.are.same(15, result.day)
    assert.are.same(6, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1721016000, result.timestamp)
    assert.are.same("2024-07-15 Mon 06:00 +1m", result:to_string())
    assert.are.same({'+1m'}, result.adjustments)

    result = result:adjust('-1m')
    assert.are.same(2024, result.year)
    assert.are.same(6, result.month)
    assert.are.same(15, result.day)
    assert.are.same(6, result.hour)
    assert.are.same(0, result.min)
    assert.are.same(false, result.date_only)
    assert.are.same(1718424000, result.timestamp)
    assert.are.same("2024-06-15 Sat 06:00 +1m", result:to_string())
    assert.are.same({'+1m'}, result.adjustments)
  end)
end)
